/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fbos.clientpkg;

import fbos.UserAcctInterface;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Robin
 */


public class uiWall extends javax.swing.JFrame {
    static UserAcctInterface myAccount;
    int numUpdate, numFriends;
    class MyListSelectionListener implements ListSelectionListener {
    // This method is called each time the user changes the set of selected items
    public void valueChanged(ListSelectionEvent evt) {
        // When the user release the mouse button and completes the selection,
        // getValueIsAdjusting() becomes false
        if (!evt.getValueIsAdjusting()) {
            JList list = (JList)evt.getSource();

            // Get all selected items
            String selected = (String)list.getSelectedValue();
            uiWall1TA.setText(selected);
        }
    }
}
    /**
     * Creates new form uiWall
     */
    public uiWall() {
        initComponents();
        myAccount = FBOSClient.userAccount;
        uiFriendsJL.setModel(new DefaultListModel());
        try {
            ArrayList accts = FBOSClient.userAccount.getFriends();
            System.out.println(accts.size());
            for(int i = 0; i < accts.size(); i++){
                UserAcctInterface currAcct = (UserAcctInterface) accts.get(i);
                Map profileInfo = currAcct.viewProfile();
                String userName = (String) profileInfo.get("userName");
                ((DefaultListModel)uiFriendsJL.getModel()).addElement(userName); 
            }
        } catch (RemoteException ex) {
            Logger.getLogger(uiSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
        uiPostJL.setModel(new DefaultListModel());
        if(myAccount != null) {
            try {
                numUpdate = 0;
                ArrayList myUpdates = myAccount.getUpdates();
                for(int i = 0; i < myUpdates.size(); i++) {
                    ((DefaultListModel)uiPostJL.getModel()).addElement(myUpdates.get(i)); 
                }
                uiPostJL.addListSelectionListener(new MyListSelectionListener());

            } catch (RemoteException ex) {
                Logger.getLogger(uiWall.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uiFriLab = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        uiWall1TA = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        uiWallLab = new javax.swing.JLabel();
        uiWallProfButt = new javax.swing.JButton();
        uiWallSearchButt = new javax.swing.JButton();
        uiWallLogOutButt = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        uiPostJL = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        uiFriendsJL = new javax.swing.JList();
        uiWallUpdateButt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        uiFriLab.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        uiFriLab.setText("List of Friends");

        uiWall1TA.setColumns(20);
        uiWall1TA.setRows(5);
        jScrollPane1.setViewportView(uiWall1TA);

        jLabel1.setText("Post on Friends Wall");

        uiWallLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        uiWallLab.setText("WALL");

        uiWallProfButt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        uiWallProfButt.setText("EDIT PROFILE");
        uiWallProfButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uiWallProfButtActionPerformed(evt);
            }
        });

        uiWallSearchButt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        uiWallSearchButt.setText("SEARCH FOR A FRIEND");
        uiWallSearchButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uiWallSearchButtActionPerformed(evt);
            }
        });

        uiWallLogOutButt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        uiWallLogOutButt.setText("LOG OUT");
        uiWallLogOutButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uiWallLogOutButtActionPerformed(evt);
            }
        });

        uiPostJL.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(uiPostJL);

        uiFriendsJL.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(uiFriendsJL);

        uiWallUpdateButt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        uiWallUpdateButt.setText("Write On Wall");
        uiWallUpdateButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uiWallUpdateButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(uiWallProfButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(uiWallSearchButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(uiWallLogOutButt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(uiWallLab)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uiFriLab))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uiWallUpdateButt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uiFriLab)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2)
                .addGap(18, 18, 18)
                .addComponent(uiWallUpdateButt)
                .addGap(72, 72, 72))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uiWallLab)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uiWallProfButt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uiWallSearchButt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uiWallLogOutButt)
                        .addGap(379, 379, 379))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6)
                        .addGap(108, 108, 108))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uiWallProfButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uiWallProfButtActionPerformed
        JFrame newUserFrame = new uiUserEdit();
        newUserFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_uiWallProfButtActionPerformed

    private void uiWallLogOutButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uiWallLogOutButtActionPerformed
        JFrame newUserFrame = new uiLog();
        newUserFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_uiWallLogOutButtActionPerformed

    private void uiWallSearchButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uiWallSearchButtActionPerformed
        JFrame newUserFrame = new uiSearch();
        newUserFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_uiWallSearchButtActionPerformed

    private void uiWallUpdateButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uiWallUpdateButtActionPerformed
        // TODO add your handling code here:
        String selected = (String)uiFriendsJL.getSelectedValue();
        JFrame newUserFrame = new uiCreateUpdate(selected);
        newUserFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_uiWallUpdateButtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(uiWall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(uiWall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(uiWall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(uiWall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new uiWall().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel uiFriLab;
    private javax.swing.JList uiFriendsJL;
    private javax.swing.JList uiPostJL;
    private javax.swing.JTextArea uiWall1TA;
    private javax.swing.JLabel uiWallLab;
    private javax.swing.JButton uiWallLogOutButt;
    private javax.swing.JButton uiWallProfButt;
    private javax.swing.JButton uiWallSearchButt;
    private javax.swing.JButton uiWallUpdateButt;
    // End of variables declaration//GEN-END:variables
}
